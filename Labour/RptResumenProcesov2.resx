<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>SELECT N, descripcion, total, detalle, tipo, suborden FROM 
                      ( 
                      SELECT 0 as 'N', '1 - HABERES' as descripcion, 0 as total, 0 as tipo, 'titulo' as detalle, 0 as 'suborden'
                      UNION 
                      SELECT count(itemtrabajador.coditem), descripcion, SUM(valorcalculado) as total, itemTrabajador.tipo, 'dato', 1
                      FROM itemtrabajador INNER JOIN item ON item.coditem = itemTrabajador.coditem 
                      WHERE anomes = 201808 AND itemTrabajador.tipo = 1 
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      GROUP BY descripcion, itemTrabajador.tipo 
			UNION
			   SELECT 0, 'TOTAL HABERES', (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND tipo = 1 AND contrato IN(select contrato FROM trabajador WHERE contrato = '125291112')), 1, 'subtotal', 2
                      UNION
                      SELECT 0, '2 - HABERES NO IMPONIBLES', 0, 2, 'titulo', 3
                      UNION
                      SELECT count(itemtrabajador.coditem), descripcion, SUM(valorcalculado), itemTrabajador.tipo, 'dato', 4
                      FROM itemtrabajador INNER JOIN item ON item.coditem = itemTrabajador.coditem 
                      WHERE anomes = 201808 AND(itemTrabajador.tipo = 2 OR itemTrabajador.tipo = 3)
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')
                      GROUP BY descripcion, itemTrabajador.tipo 
                      UNION
											SELECT 0, 'TOTAL HABERES NO IMPONIBLES', (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND(tipo = 2 OR tipo = 3) AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')), 2, 'subtotal', 5
											UNION
                      SELECT 0, '3 - LEYES SOCIALES', 0, 4, 'titulo', 6 
                      UNION 
                      SELECT count(itemtrabajador.coditem), descripcion, SUM(valorcalculado), itemTrabajador.tipo, 'dato', 7 
                      FROM itemtrabajador INNER JOIN item ON item.coditem = itemTrabajador.coditem
                      WHERE anomes = 201808 AND itemTrabajador.tipo = 4 AND(itemTrabajador.coditem &lt;&gt; 'SCEMPRE' AND itemTrabajador.coditem &lt;&gt; 'SEGINV')
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      GROUP BY descripcion, itemTrabajador.tipo 
                      UNION 
											SELECT 0, 'TOTAL LEYES SOCIALES', (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND tipo = 4 AND(coditem &lt;&gt; 'SCEMPRE' AND coditem &lt;&gt; 'SEGINV') AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')), 4, 'subtotal' , 8
											UNION		
                      SELECT 0, '4 - DESCUENTOS', 0, 5, 'titulo', 9 
                      UNION 
                      SELECT count(itemtrabajador.coditem), descripcion, SUM(valorcalculado), itemTrabajador.tipo, 'dato', 10 
                      FROM itemtrabajador INNER JOIN item ON item.coditem = itemtrabajador.coditem 
                      WHERE anomes = 201808 AND itemTrabajador.tipo = 5 
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      GROUP BY descripcion, itemTrabajador.tipo 
                      UNION
											SELECT 0, 'TOTAL DESCUENTOS', (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND tipo = 5 AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')), 5, 'subtotal', 11 
											UNION
                      SELECT 0, '5 - APORTES', 0, 6, 'titulo', 12 
                      UNION 
                      SELECT count(itemtrabajador.coditem), descripcion, SUM(valorcalculado), itemTrabajador.tipo, 'dato', 13 
                      FROM itemtrabajador INNER JOIN ITEM ON item.coditem = itemTrabajador.coditem 
                      WHERE anomes = 201808 AND itemTrabajador.tipo = 6 
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      GROUP BY descripcion, itemTrabajador.tipo 											
											UNION
                      SELECT count(itemtrabajador.coditem), descripcion, SUM(valorcalculado), 6, 'dato', 14
                      FROM itemtrabajador INNER JOIN item ON item.coditem = itemTrabajador.coditem 
                      WHERE anomes = 201808 AND itemTrabajador.coditem = 'SEGINV' 
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      GROUP BY descripcion, itemTrabajador.tipo 
                      UNION 
                      SELECT count(*), 'SEGURO CUENTA INDIVIDUAL EMPRESA', SUM(syscicese), 6, 'dato' , 15
                      FROM calculoMensual WHERE anomes = 201808
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      UNION 
                      SELECT count(*), 'SEGURO CUENTA FONDO SOLIDARIO', SUM(sysfscese), 6, 'dato' , 16
                      FROM calculoMensual WHERE anomes = 201808 
                      AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112') 
                      UNION 
											SELECT 0, 'TOTAL APORTES EMPRESA',  
                      (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND tipo = 6 AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')) +
                      (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND(coditem = 'SEGINV' OR coditem = 'SCEMPRE') AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')), 6, 'subtotal', 17
											UNION
                      SELECT 0, '6 - RESUMEN', 0, 7, 'titulo', 18                                                                
                      UNION 
                      SELECT 0, 'TOTAL PAGOS POR CONCEPTO REMUNERACIONES', (select SUM(syspago) from calculomensual WHERE anomes = 201808 AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')), 7, 'totalizado', 19                                           
                      UNION 
                      SELECT 0, 'DESCUENTOS + PAGO POR REMUNERACIONES',  
                      (select SUM(syspago) from calculomensual WHERE anomes = 201808 AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')) +
                      (SELECT SUM(valorcalculado) FROM itemtrabajador WHERE anomes = 201808 AND tipo = 5 AND contrato IN(SELECT contrato FROM trabajador WHERE contrato = '125291112')), 9, 'totalizado', 20                            
                      )data
                      ORDER BY suborden</value>
  </data>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0iTiIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9ImRlc2NyaXBjaW9uIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9InRvdGFsIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJkZXRhbGxlIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9InRpcG8iIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJzdWJvcmRlbiIgVHlwZT0iSW50MzIiIC8+PC9WaWV3PjwvRGF0YVNldD4=</value>
  </data>
</root>